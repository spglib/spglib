name: test
run-name: Run tests

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  # Make it able to be used in other workflows
  workflow_call:

jobs:
  pre-commit:
    name: Check pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0

  ctest-linux:
    runs-on: ubuntu-latest
    container: ghcr.io/lecrisut/dev-env:f37
    needs: [ pre-commit ]
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        experimental: [ false ]
        toolchain: [ gcc, llvm, intel ]
    steps:
      - name: Activate Intel compilers
        # Not elegant, it will propagate all environment variable.
        # Intel does not provide a way to output the environment variables to a file
        # Note: PATH needs to be exported to GITHUB_PATH otherwise it can be overwritten
        run: |
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV
          echo $PATH >> $GITHUB_PATH
        if: matrix.toolchain == 'intel'
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest
      - name: Run CMake configuration for ${{ matrix.toolchain }} toolchain
        uses: lukka/run-cmake@v10.3
        with:
          workflowPreset: "${{ matrix.toolchain }}-ci"

  coverage:
    runs-on: ubuntu-latest
    needs: [ ctest-linux ]
    strategy:
      matrix:
        coverage: [ unit_tests, c_api, fortran_api ]
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest
      - name: Get test coverage for ${{ matrix.coverage }}
        uses: lukka/run-cmake@v10.3
        with:
          workflowPreset: "ci-coverage-${{ matrix.coverage }}"
      - name: Get lcov data
        uses: danielealbano/lcov-action@v3
        with:
          # Note lcov-action prepends and appends wild-cards *. Account for those
          # https://github.com/danielealbano/lcov-action/issues/11
          remove_patterns: /test/,/cmake-build*/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: ${{ matrix.coverage }} coverage
          files: coverage.info
          flags: ${{ matrix.coverage }}
          verbose: true

  pytest-linux:
    runs-on: ubuntu-latest
    needs: [ ctest-linux ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          conda install --yes -c conda-forge python=3.9
          conda install --yes -c conda-forge numpy gcc_linux-64 pip pyyaml make cmake scikit-build-core build
      - name: Setup spglib
        # TODO: switch to editable installs
        run: |
          pip install .[test-cov] \
            --config-settings=cmake.define.SPGLIB_TEST_COVERAGE=ON \
            --config-settings=build-dir=build
      - name: Test with pytest and code coverage
        # TODO: switch to `coverage run`
        # Cannot use coverage run without editable installs (probably)
        run: |
          # coverage run
          pytest --cov=spglib
      - name: Get lcov data
        uses: danielealbano/lcov-action@v3
        with:
          # Note lcov-action prepends and appends wild-cards *. Account for those
          # https://github.com/danielealbano/lcov-action/issues/11
          remove_patterns: /test/,/cmake-build*/,/tmp/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: python api coverage
          files: coverage.info,.coverage
          flags: python_api
          verbose: true
